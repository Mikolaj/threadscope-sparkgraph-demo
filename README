# This repo contains a snapshot of a version of ghc-events,
# from http://code.haskell.org/~duncan/ghc-events/
# and a copy of http://code.haskell.org/~duncan/parlist.hs
# Both are slightly modified. It also contains plot scripts
# generated using gnuplot (http://www.gnuplot.info/).
# The ghc version required to compile the included ghc-events
# is the one from http://darcs.haskell.org/~duncan/ghc/

# Instructions:
# to see the plots, do (using the right ghc version)

cd ghc-events
cabal install
cd ..

ghc -O -eventlog -rtsopts parlist.hs --make -threaded

./parlist +RTS -N2 -ls; show-ghc-events parlist.eventlog > output.dat

gnuplot

# TODO: make it zoom out better (max, min, mean, median, all)
load "pool_size.plt"

# TODO: make those zoom in (saw pattern) and zoom out (add increments) well
# TODO: colour (<@dcoutts> eg black duds, green created and red overflows)
# TODO: indicate somewhere than the area below the graph is the total
# cumulated number of sparks created/disposed
load "cr_local_speed.plt"
load "di_local_speed.plt"

# TODO: make >= 9 more plots: five zoomed out pool_size,
# two zoomed out local speeds, two or more zoomed in local speeds with
# different time intervals for resampling


# to generate the plots, do, e.g.,

set term pngcairo size 600, 300

# and repeat the loads, naming the pictures before each, as in

set output "png/pool_size.png"

# at one point I also needed "set yrange 1100" for pool_size.plt

# deprecated plots:

# too much vertical space taken
load "creation_cumulative.plt"
load "disposal_cumulative.plt"

# speed averaged over arbitrary, too big interval (from start to sample point)
load "creation_speed.plt"
load "disposal_speed.plt"
