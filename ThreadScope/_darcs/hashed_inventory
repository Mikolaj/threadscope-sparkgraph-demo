pristine:0000001864-f023c7c45d11861518dad0647b223212c9412abb1ca7a072b29384a360fefce8
Starting with inventory:
0000057931-abac2ae96674d7ba725832fd35d1a3a29979b5da1f1bffa834058446f884179b
[TAG 0.1.2
Simon Marlow <marlowsd@gmail.com>**20100526204935
 Ignore-this: d04bf0d3d66fd70d72554f2963aba692
] 
hash: 0000034761-db28c06be9f64391d8801d2850cbac1c894d6e11a27cfbd1ef9afe8f8d4f7169
[About dialog: get current version from threadscope.cabal
Spencer Janssen <spencer@well-typed.com>**20110330191446
 Ignore-this: fb591749587a77f9ef57f24a34af979c
] 
hash: 0000000341-cf89441a990c06003acb23a385262d0927b773145cae1ffa4131ed7244dc28dc
[Rename ppEvent to avoid conflict with ghc-events 0.3
Spencer Janssen <spencer@well-typed.com>**20110330191551
 Ignore-this: 203244a7cd3b64cf2a0d4059f0cc6b1c
] 
hash: 0000000611-3045e0d9d109e76be93d0c251f2f68556d2a9a5fda55d95990e8a22f9b1a70d3
[Work around cairo-0.12.0 bug
Spencer Janssen <spencer@well-typed.com>**20110330191554
 Ignore-this: 9b4b903e31380b6b5e703334f3521843
] 
hash: 0000000866-6cefdfbb7bb73697b3373f65dc543fe25bf26a69893c4c8eea499457012b0ef4
[Add GHC 7.0 flags and refactor
Spencer Janssen <spencer@well-typed.com>**20110330191618
 Ignore-this: 645ee33a32ece50b4f7c9bb6cbea14ae
] 
hash: 0000000664-96f7a30f75ec783fba2fc24c306bc0c102a1d5c50414cdf53411d51240c8a51d
[Suppress unused do binding warnings
Duncan Coutts <duncan@well-typed.com>**20110420100458
 Ignore-this: 8eb3e2af2f4090f656daee46d132c7b1
] 
hash: 0000000210-96da0850cf201a59c736004b621eb3502b555b2479510c565e87f44d765d0c15
[Switch from glade to the new gtk builder
Duncan Coutts <duncan@well-typed.com>**20110420100613
 Ignore-this: 8ab873aa30cb7ca0c41bb8f9380df9bb
 Removes dependency on glade, but depends on slighlty more recent gtk.
] 
hash: 0000078172-cea763fbf072a66a3cf4fc9248a758140daaecf2d82e60b3033ce3518292c489
[Change sidebar to use tabs rather than a combobox
Duncan Coutts <duncan@well-typed.com>**20110420121941
 Ignore-this: b2b228477241d213eee09a622d362a9e
 Also fix View->Sidebar menu, and reorder "Jump to" tool button.
] 
hash: 0000007947-45c19fb84e57bb1c8238850f8af76dde7b1c7b43f9139f79186135089851a8a1
[Rearrange the main timeline and events views, and the menubars
Duncan Coutts <duncan@well-typed.com>**20110420172626
 Ignore-this: ff5d5c3b8b0bdf1ca3868a741c3e6b54
 Instead of being in two tabs, they are now visible simultaneously,
 one above the other.
 There is now one global menu bar, rather than one for each tab.
 The beginning/center/end buttons now control both the timeline and
 event views simultaneously (they were previously independent).
 A few UI tweaks: use of frames, padding. In the timeline view, the
 legend and the side labels are now inside the frame and scrollbars.
] 
hash: 0000025633-ad49f5be353c7c0a9aa0f5a8da97f90022cae5292688f911f784f9dc0e3bf88f
[Add back menu bar tool tips
Duncan Coutts <duncan@well-typed.com>**20110420175821
 Ignore-this: 9c75cfa0f91ea27377bd01d53223c576
 Lost in the Glade XML -> GtkBuilder XML conversion
] 
hash: 0000001019-046bd9f189425de9b70b0c8d65e78d1ff4ab46723da5dd9f386017ca7a32e2ef
[Clamp ranges on scrollbars better
Duncan Coutts <duncan@well-typed.com>**20110420181141
 Ignore-this: 5ad5ccd0c17a1a7ad774af1ccebb2260
] 
hash: 0000001546-65069a8040412796b21d77a1f1dfa97ed928776865f65fc97006e42b65e496ba
[Use more kosher method of showin/hiding sidebar
Duncan Coutts <duncan@well-typed.com>**20110420193822
 Ignore-this: c62dc9daba82dcb59ccb810f683ef47
] 
hash: 0000000433-0476b797dda2b71f1acd3543ff927dac7c6a699224ee075a1230dfc97a9091fe
[Allow the events view to be hidden, via the View mensu
Duncan Coutts <duncan@well-typed.com>**20110420194737
 Ignore-this: c638c5003525738d969c1a40add800b1
 Events view is shown by default but can be turned on/off from the view menu.
] 
hash: 0000001601-c50948087ad54499544ff877e8e9a8cf67d8f316588ce3522f312e9d22d46a6b
[Bump version to 0.1.3
Spencer Janssen <spencer@well-typed.com>**20110331163028
 Ignore-this: 207c38d4b45bb2a7f64029d6d4bee44e
] 
hash: 0000000213-e6b5e0b330db81a2058947eaf4ee78e975089e85b187224e91a67ea017abc106
[TAG 0.1.3
Spencer Janssen <spencer@well-typed.com>**20110331163056
 Ignore-this: d4a9e9b21c171d0cd0772e9101cd73a
] 
hash: 0000000967-3700962c1e7e8176487ca5cdde37f0a7a047ee6bb522e8711d016c78b02c5d9a
[Bump containers dependency
Spencer Janssen <spencer@well-typed.com>**20110404162534
 Ignore-this: 51ecfb77cffec4088761adc054085ee
] 
hash: 0000000260-0bbceb0617b8e9c6d584c0fb8a2f13eb8484617e73abe51054717471a93ce580
[TAG 0.1.3
Spencer Janssen <spencer@well-typed.com>**20110404162547
 Ignore-this: d9c8f30c59008bcfe5121c6a0f0c964d
] 
hash: 0000001102-d0ad5f9688e22527cd1e55d3e3e3e022b2d1689628743de2e84cb2bac2151015
[Move modules into related groups
Duncan Coutts <duncan@well-typed.com>**20110421120315
 Ignore-this: 719c412531212cb056391eba4a221d88
] 
hash: 0000040047-55900a394a56be7bf61a6e7949ec4aeff80da8b8ecb805b339a64140fb1f73dd
[Remove tabs, excess whitespace and fix inconsistent dos/unix text formats
Duncan Coutts <duncan@well-typed.com>**20110421120326
 Ignore-this: 3787a752e1f9eecb1079fba28175359f
] 
hash: 0000136289-b2a9eac4d337c657093f0e235ec4b9b3730cf01d8715e3015f0e4d3bacaca300
[Remove some redundant imports
Duncan Coutts <duncan@well-typed.com>**20110421120327
 Ignore-this: f96eaa0a8d3ed409a6e8ed5b4b12ff1a
] 
hash: 0000001219-007acf01015fc22f99773bcb182a36384345af015e015b45c42a7f962a7406b5
[Use a new method of cooperative scheduling with gtk
Duncan Coutts <duncan@well-typed.com>**20110421135620
 Ignore-this: b894f2ec5075e2dd87c02d90bfed2efa
 Allows us to use forkIO threads anywhere
 which in turn will enable greater modularity.
] 
hash: 0000004365-963556c9830c7a9e01ee2d19f8429103116fef556303bce7779d4747b7b5e567
[Amalgamate dialogs into one module and improve code
Duncan Coutts <duncan@well-typed.com>**20110421162129
 Ignore-this: 4077dd3f94f15a0a583174a4bb985d2a
 Using dialogRun is not such a good idea. It's better to deal with the
 asyncronous nature of dialog results directly than to start nesting
 calls to the main loop.
] 
hash: 0000004065-84659d50a9ba6c95935439cfcba964088c4e75c87b291b11ef570474941ddfab
[Add a .eventlog filter to the file open dialog
Duncan Coutts <duncan@well-typed.com>**20110421162132
 Ignore-this: 3afb99d06d4dfb8014b5abfa94e7c9e
] 
hash: 0000000687-c2d730a9ba64ee8202a1c619b88dac284c94ca01fb105b1a96f87bcc24113200
[Split command line and graphical parts of Main
Duncan Coutts <duncan@well-typed.com>**20110421163051
 Ignore-this: 2802360c1a35129654162813f08f60d1
] 
hash: 0000001345-63e1256c5539b5b6100a4e89627d970fc33d2b06d397b65507cc1aa9f280d6c7
[Move option parsing into Main
Duncan Coutts <duncan@well-typed.com>**20110421164035
 Ignore-this: 64724ea63d50a7ee43dac1b41ea8f76e
 Rather than several modules depending on Options and passing these
 options about, do all the option handlign up front and pass down to
 other modules just the info they need.
] 
hash: 0000003748-96c787bb425abaecb5dab8a576a50ed753a99ac6b86737dd7d43b3fdab88a283
[Further separate the command line main from the GUI main
Duncan Coutts <duncan@well-typed.com>**20110421165126
 Ignore-this: a0cc6086d803690d8751834e3b0445b8
] 
hash: 0000001475-bd7f3febd8ca3bf7f0b119f50b7c21ce4b8662f4045ed0bc551e5efb38fc18cb
[Merge buildInitialState with startup to avoid leaking state
Duncan Coutts <duncan@well-typed.com>**20110422093504
 Ignore-this: 47fe21d58769411a8c61651702594eea
 We want to minimise the number of shared mutable objects in the
 ViewerState record. The split in the construction phase meant that
 many mutable objects that were only used during construction were
 passed via the ViewerState which then made them available to the
 rest of the program.
] 
hash: 0000010521-b3f6660932f18bc06ecbf23b048ebb5f689a78238195b20808ebfa740b00d2e8
[Remove some more redundant imports and dead code
Duncan Coutts <duncan@well-typed.com>**20110422094435
 Ignore-this: 14a94564ac6976cf3ca7ed06d7077bee
] 
hash: 0000001148-217660d3fe44a324f9dd1ad385ae493a65da4a3e5d7b29b6141569ec2d5b5a62
[Refactor Sidebar module to be better encapsulated
Duncan Coutts <duncan@well-typed.com>**20110422110912
 Ignore-this: 734110727449b1e08cd75d0d08427853
 Now longer uses the global ViewerState and no longer depends on GUI.Timeline.
 Just interacts with its caller via event/action callbacks and methods.
 Only remaining TODO is the TreeStore which is still shared with the Traces.
] 
hash: 0000004841-d48772fbb0c853fe37f8aa2656dc7e5d910c14f7bab86112352297b2f87f84e1
[Remove dead code and unnecessary exports from EventsWindow
Duncan Coutts <duncan@well-typed.com>**20110422143633
 Ignore-this: eb22680657b663eede476d95dbe09147
] 
hash: 0000000523-893822a75207227bd2a5e205ce91d679f98d35367ef4ecd38f7c391ebd11e4fa
[Refactor events window to be better encapsulated
Duncan Coutts <duncan@well-typed.com>**20110422160957
 Ignore-this: 87662bef8184d6c1d6af70bf01c1d099
 But still need to eliminate a couple shared IORefs
] 
hash: 0000011407-d021e3ce39661b93afa67c34a61769c914438ff1103ea44ffcdac1ba42583420
[Remove another widget from the shared state
Duncan Coutts <duncan@well-typed.com>**20110422163612
 Ignore-this: 51de71541f39f2cab9e6a764ae1348ef
] 
hash: 0000000210-eb50a5842ac3648740dec70edba2508fa10b5e59d7c9cb3f4473275626925e8c
[Remove shared widget timelineHScrollbar and timelineVScrollbar
Duncan Coutts <duncan@well-typed.com>**20110422171957
 Ignore-this: 8630aa79b5260a4da294e1a1e19ff5fd
] 
hash: 0000001009-82a3043728235ee135e4cc6997ff7e4fb3975c3ff382f748f8372ff8ad0a2a45
[Set the zoom/scroll button handlers in the GUI main, not the timeline
Duncan Coutts <duncan@well-typed.com>**20110422174248
 Ignore-this: daf6cd9f4926945ecd3659b62db7e8ff
 This eliminate a few more widgets from the global shared state.
 Export appropriate methods from Timeline. The Timeline module still
 needs encapsulating properly.
] 
hash: 0000003170-bd49c843e4e83b886dac14255b1f4c9b92a45f312ad91aa578df50fae6068781
[Postpone file loading until after the main window is displayed
Duncan Coutts <duncan@well-typed.com>**20110423094854
 Ignore-this: 9db9ac625b5d92299ba0cef5e128918b
 This is more standard GUI behaviour.
 (It also happens to help with some  other refactoring)
] 
hash: 0000001127-d1fda6a5a61dc50b33e92a7c2577a6599f3b5935b1adcbd58864ec9e973a017b
[Refactor timeline module to increase encapsulation
Duncan Coutts <duncan@well-typed.com>**20110423103648
 Ignore-this: 4e56152bef0d9b745cedef639c5e2fba
 Not yet complete, it still uses the ViewerState but not directly,
 it now only passes it on to other modules that still use it.
] 
hash: 0000009907-8dbdd6e48e3bba59ababfa6bb947b79ac81f38a7dda1d53f53d8fa2d7e612395
[Remove debug trace code that violates layering
Duncan Coutts <duncan@well-typed.com>**20110423104056
 Ignore-this: 92221dae51cef09cd6a92f515f3f591
] 
hash: 0000000660-49508e43d93fcb5e61aae823e06e3a3c8f9126052ad772069da357f92b021572
[Split GUI.Main into actions part and view part
Duncan Coutts <duncan@well-typed.com>**20110427165627
 Ignore-this: ddd561d4b6c78230ade4986662fe110b
 The new GUI.MainWindow is the view part that just deals with constructing
 the view and setting up actions for events. The actual handlers remain in
 the GUI.Main module.
] 
hash: 0000019243-c8fe4438d693ec16913b3d9b83e43858c0fd7cac9455698b48bcabf2c25fc693
[Update the EventsWindow after loading a file
Duncan Coutts <duncan@well-typed.com>**20110427170057
 Ignore-this: 927a3907c0c0aa063787d35bc9cdc626
 Previously this only worked by accident. There was no proper mechanism
 for notifying the events view after mutating the underlying model state.
 Note: this is only a temporary fix to make it work ok. The long term
 solution is in the rest of the refactoring.
] 
hash: 0000003956-12195b8f3c5704dd54cdf607342d98e0cfd07f27e8faf1939108c6a574b5c1a8
[Merge the two SaveAs modules into one
Duncan Coutts <duncan@well-typed.com>**20110428114214
 Ignore-this: b7f602405343d1cc2235baba36c90776
] 
hash: 0000003371-c6d6c4e74541838a04f10120faf217afadeabc3b4e8f44a67705886a27f278be
[Stop the shared use of another IORef
Duncan Coutts <duncan@well-typed.com>**20110428115036
 Ignore-this: fdffab5d9218915ccfd21b6c2c0a80fc
] 
hash: 0000001599-1c35925a94347d8f1f4ca46470b864b9f3b23bdbf72cb270d47175e924aedbc6
[Pass value paramaters to the saveAs functions
Duncan Coutts <duncan@well-typed.com>**20110428140400
 Ignore-this: 3243d040543ea662986864ee8d28d8b
 Rather than passing references to various bits of mutable state.
] 
hash: 0000004962-7d28428f0e056b7b5d868678602007b69a2ed13fd11284d1bb90294f4e898ae5
[Change the way we handle the progress bar for the file loading
Duncan Coutts <duncan@well-typed.com>**20110428161144
 Ignore-this: 6a1c99b14c4a834811a823cb38d3172b
 Better separation and no more dialogRun nonsense.
] 
hash: 0000009381-fdd9bc940688465aab4cc044ded181f0ab181e05089d3298a823a3618b575c93
[Move updating of the main window titlebar and statusbar to the right place
Duncan Coutts <duncan@well-typed.com>**20110428185045
 Ignore-this: 4005727a33faeedb03fa87c5b0f8402c
] 
hash: 0000004290-59d6edea4ef40393ebc8afb8c88d50734fe84384e45f1fc8aae5172b4a965bdb
[Eliminate another shared widget
Duncan Coutts <duncan@well-typed.com>**20110428185143
 Ignore-this: 8d642438ae6cfaa358c991aa22b782d0
] 
hash: 0000002166-0de067d9c371cdc0ae024baffa35b9aea8ef3e241aba15511becd4cdd6ccfc4d
[The ReadEvents now return results rather than updating the GUI directly
Duncan Coutts <duncan@well-typed.com>**20110428190650
 Ignore-this: 507f1ca21d04995c733d20689775400b
 The GUI.Main is now responsible for making the state changes and
 updating the GUI once the data has been loaded.
] 
hash: 0000004379-9e44a43b952fddf204d1ae3450895291cdc794486428f4fb44bf67980623788c
[Add a FIXME about use of old style Gdk.GC drawing
Duncan Coutts <duncan@well-typed.com>**20110428193329
 Ignore-this: 11f7fbbb862f71d41d5f1727bccf1b59
 We should be using cairo instead.
] 
hash: 0000000634-ec1890578fa52036401a92309676210ddbfbbf0ec4cb72d1b0da2e04aae973ef
[Remove some now-redundant state parameters
Duncan Coutts <duncan@well-typed.com>**20110428193809
 Ignore-this: e19c6337bacb5dc9d7b5402e183d0b01
] 
hash: 0000004352-3089a4618c5629eacdbb10f2beb04dfcf21950c5ae7ac60d17f71bcc7452d554
[Remove now-redundant code and state entries
Duncan Coutts <duncan@well-typed.com>**20110428195725
 Ignore-this: b56360a283613d3b018b3978ce28cd3c
] 
hash: 0000000957-b9c9629bce51c5fe23079742bfca06dd14094a3185899d2cb935919a27f672fa
[Note more explicitly which ViewerState items are used where
Duncan Coutts <duncan@well-typed.com>**20110428200626
 Ignore-this: ecf6596a887cb39db5adb38f0155252c
] 
hash: 0000003380-23c505d3edc2bd511f403e2de37ab3c1ef6be83a1e23b4cb306072541d0f60e4
[Remove shared state from the EventsWindow
Duncan Coutts <duncan@well-typed.com>**20110429122336
 Ignore-this: 76dcfee413786bf1a8f09b11379763a3
 Still to be done is to sync up the cursor position of the events window
 and the timeline window.
] 
hash: 0000004831-c5d691d23bc51b6e7b1090d504a7d19d3a92f668c20c51fbed0c4433aec2dd4b
[Remove debug code from the EventsWindow
Duncan Coutts <duncan@well-typed.com>**20110429122349
 Ignore-this: f4326c326bbabde76a9003d03ea26674
] 
hash: 0000001646-64bd9d71eb56e532bf89e5eefdbae7fe5249149f0f437ed623199ed9af08e5e5
[Eliminate the ViewerState type
Duncan Coutts <duncan@well-typed.com>**20110429195918
 Ignore-this: ea8555c84fc5934b4ab02996d8db5f94
 The remaining state components are used only by the Timeline modules.
] 
hash: 0000020042-94386234e35904fa4ae4f702a6b6b64c1303ef5da184d90fc968e3389703a8e3
[Rename the GUI.State module to GUI.Types
Duncan Coutts <duncan@well-typed.com>**20110429200234
 Ignore-this: 4d4f9befacf6a3c25f65ed4b2af58a11
 It doesn't contain any state anymore.
] 
hash: 0000001749-44cdb0f79a53da8ca286c2761e2466bbe45c373f5c0f6bf7d24fe2b31893d36f
[Move the getViewParameters to the Timeline module
Duncan Coutts <duncan@well-typed.com>**20110429202426
 Ignore-this: 649bd2b329ad193a11c845ff338738d
] 
hash: 0000002931-2f3736b12930817d0921b0d6bfba0565a01126782289d35647f79f990ad7ee42
[Use MainWindow as a Gtk.Window and hide underlying Window widget
Duncan Coutts <duncan@well-typed.com>**20110429202832
 Ignore-this: 65afd52579ed13de9f034235504bbabd
 Make MainWindow an instance of the Gtk.WindowClass so it can be passed
 where a  Window is required, e.g. when constructing dialogs.
 This gives us slightly better encapsulation for the MainWindow module.
] 
hash: 0000002086-539b0acc9dfad7e006d1d300c09724a4f0b168ec4f03174e4411720aac390ba7
[Give the TimelineView a private hecsIORef and scaleIORef
Duncan Coutts <duncan@well-typed.com>**20110429204943
 Ignore-this: 68e656a6fe6c593952a8b87303ed9924
 And a proper update function.
] 
hash: 0000002716-bc5cec6ea6b1cf5e96ed5cc8d104d47d685d5d3750c73020cd43cc5a1f071dda
[Fix a bug with the filename not being set on file load
Duncan Coutts <duncan@well-typed.com>**20110429205121
 Ignore-this: cccab06d20381172d91d5297b413ad02
] 
hash: 0000000787-6c84bde6785eedc387fd80de4543f79ce1a043f871e01f1137f2e5670fc84083
[Move control over visibility of sidebar and events view to the MainWindow
Duncan Coutts <duncan@well-typed.com>**20110429233757
 Ignore-this: 33346c7e2e60bd584e2f47f00ac379c0
] 
hash: 0000002022-4c1f06fb65975a79bb356d202354cacb8851ab13f847cbe3d617e26b5b4e8e46
[Make a new TraceView component and separate the trace state in the Timeline
Duncan Coutts <duncan@well-typed.com>**20110430003528
 Ignore-this: a4218c6cf1b0c97b0ccc23a0f8844520
 Now the TraceView and Timeline have separate private states relating
 to the traces, along with public functions to set the state.
] 
hash: 0000009404-90d1da3c416d5af3c3e3fad4a1e28218cd4b8d6f4d4ff2c783941f55e3a83cd1
[Unshare the bookmark state
Duncan Coutts <duncan@well-typed.com>**20110503175332
 Ignore-this: 873c32f7d4ac1d3e6f2ab9074ab2290d
 The bookmark state is owned by the BookmarkView and changes
 are sent to the Timeline
] 
hash: 0000009638-1562f0d9a69b5023b73d5d69f5fbfba2329a41c8b6d51c3c84202bb393ad65ee
[Unshare the cursor state
Duncan Coutts <duncan@well-typed.com>**20110503182804
 Ignore-this: 67bde2c65c821482b8d4c407f9eeccf3
 Now separate in the events and timeline views.
 Managed at the top level in main.
] 
hash: 0000002902-55e68dd17787f66572b25e31f32e988c7e5aab001d5d66b9d0174933ca192e65
[Remove the little remaining debug code
Duncan Coutts <duncan@well-typed.com>**20110503183338
 Ignore-this: bf53ac86281de5e0bb215e1efdaf13c8
] 
hash: 0000000982-683d166c94eed4e0fd2fcbb373cad0b1dab62c05f6c553ebc0e9a9135fc085ec
[Merge a couple tiny modules
Duncan Coutts <duncan@well-typed.com>**20110503191711
 Ignore-this: 57413d4b9d808a2d2accdde793a95e0e
 Each only had one function that was only used in one place.
] 
hash: 0000003929-497cfe09f08592da639515d02804bbd472c88cdf2894a0d3aca83bbea26ec432
[Handle the display label mode state properly
Duncan Coutts <duncan@well-typed.com>**20110503193611
 Ignore-this: c36deb1b8843ee023575855081a58483
] 
hash: 0000002533-6316af3b1d41b025e3157bc1f06d5bb5e65c1c6f2a55e1c8f6748140dad321d9
[Add a TODO
Duncan Coutts <duncan@well-typed.com>**20110503193700
 Ignore-this: 30db20a1807a40b7619a266aa883b551
] 
hash: 0000000396-8dccf9cf702d9a06515e6ef20962d71b154b5a3493e82f22e86c44ea75d50ba5
[Stop exporting some now-unused timeline state change notification functions
Duncan Coutts <duncan@well-typed.com>**20110503194039
 Ignore-this: aa7afc893beb9fbefe37831fee5a9403
] 
hash: 0000000521-ebbf6bf18a7a870180f2d344ab87365fd7de2e4be08cfc5e9e2ad5287cf65ad1
[Move more of the state handling into the main Timeline module
Duncan Coutts <duncan@well-typed.com>**20110503205843
 Ignore-this: 22a1af36541a28ec796e5e2368bc7bd3
 rather than having it in the Render module too. Ideally the render module
 should be stateless and just render based on paramaters passed.
] 
hash: 0000008317-2888b317597d485cdf339a006bc5d1fbf95b8356338093c78307235f81212247
[Separate the TimelineView from the TimelineState
Duncan Coutts <duncan@well-typed.com>**20110503225119
 Ignore-this: 987f840416756a75ceef942315d6be44
 The TimelineState should eventually be eliminated.
] 
hash: 0000014781-0555cdcd4e7bde3f2aa6a24ba7fde38a1e49420d4367d856652b5aaec88aae2b
[Fix up timeline key bindings
Duncan Coutts <duncan@well-typed.com>**20110504104428
 Ignore-this: 26bfc712c1b53d9405804f82478e95ca
] 
hash: 0000002500-2a511db9b6823327b332b6b62e92c8c0f4681912d74351d1ae8f5b01e54afea6
[Move the timeline key into the sidebar
Duncan Coutts <duncan@well-typed.com>**20110504120009
 Ignore-this: 977e30a9e9a7c5995cf1586eff7ac5e9
] 
hash: 0000012468-90e6daa68b8063fce784fdff22f94a845c4f784d83cbb8e86934a48528f96541
[Rewrite the events view
Duncan Coutts <duncan@well-typed.com>**20110507141038
 Ignore-this: 754c0afce14cc75cd485a2c6991c0b93
 All of the visual rendering, the behaviour, state management and interface.
] 
hash: 0000027044-24aa3f8e1cfda5f968f22d03dbec91f98e035b16f36000dfc051fa7b9d79e188
[Move definition of HECs types to Events.HECs
Duncan Coutts <duncan@well-typed.com>**20110507224217
 Ignore-this: 1e15d7aad42da955a38e01b43e9340a4
 It is not GUI specific.
] 
hash: 0000002068-286f3fb99392809b0ea73811c5f6091da56693748eb56717a3ece6e4f4c0a2a0
[Synchronise the cursor in the events view and timeline
Duncan Coutts <duncan@well-typed.com>**20110507224626
 Ignore-this: 68e551081ecc30db9af2cc655037013d
] 
hash: 0000001370-8d79bcf291dd093a662f9e51699ac7fe21883b894e4a01156a2a9e41e8f67d54
[Simplify redraw/update patch for timeline zoom
Duncan Coutts <duncan@well-typed.com>**20110507230034
 Ignore-this: 912b53acb12867228d0bbcc33c1b5bff
] 
hash: 0000001312-0d2cfacf9b620d49119a59cd3f12759ed61c18066d0818e3015829af792644ed
[Change the main window state/event handling to use an event loop and queue
Duncan Coutts <duncan@well-typed.com>**20110509180808
 Ignore-this: cf676e7c272eccc039a12f7cf0d52331
 That is, rather than the state being in a bunch of IORefs, have a single
 recursive event loop function that keeps the state as function paramaters
 and recieves events and performs update actions.
] 
hash: 0000019846-236ddeaff3da8eadc9cdd0f9ac8806182c0afb6adfb4c20a4b40428ca54fc332
[Fix input focus for events and timeline views
Duncan Coutts <duncan@well-typed.com>**20110509181620
 Ignore-this: e23c44206862cc38562b1a66c3dae824
] 
hash: 0000002501-c7b2f7ca042395d15c2f3bfc810acfac00a86a43845f450df5bd8f134e8f9978
[Add GUI sync calls so that the progress window is displayed
Duncan Coutts <duncan@well-typed.com>**20110509181640
 Ignore-this: 7238ac8ef22bc3075d9ff6d6f466eb50
 Otherwise the thread scheduling can mean that the background processing
 goes on for too long while the GUI is not being updated.
] 
hash: 0000001254-539d1478e48420f006a6b0d1083c2ac5afb6452fde70fed9d7d09f834d1f7164
[Add myself as an author
Duncan Coutts <duncan@well-typed.com>**20110509182027
 Ignore-this: f593b13de32b632218d79d3b3b191117
] 
hash: 0000000295-ef7abe31896883e97c0bc130ec7e3e094ce3aa170e5e5f09beb732ef5b0cea38
[Bump the version number
Duncan Coutts <duncan@well-typed.com>**20110509182723
 Ignore-this: 1859ad1fee6519370e30eb6d8067d3e4
] 
hash: 0000000210-21441d9afcdacacac5f0f4c572064bcd47c68be4e68912d0ba8382660a18d27f
[fix cut-and-pasto (Save as PNG was saving a PDF)
Simon Marlow <marlowsd@gmail.com>**20110526123341
 Ignore-this: 2d81e85e6cb4723bac99428ee842f4a4
] 
hash: 0000000287-c6c1ba85b13ce4d73df8930841a4407322ca652d17ccd987630340ba9cfd02f0
[Turns out we need gtk-0.12
Duncan Coutts <duncan@well-typed.com>**20110602152304
 Ignore-this: 2c6c52489591d254f442bb3abcde68f5
] 
hash: 0000000268-8ca9ac3ed3076866283804a70650b355bf77950c8f65797595203770b593fbc0
[datatype of tree of spark counters and it's constructor
mikolaj.konarski@gmail.com**20110617180100
 Ignore-this: d8dbb1c8fbeca4bc7d5fd79821e1e3b0
] 
hash: 0000004977-42c8f73a79c878fc9e716c8520b971b5dd68f7e1b7798d3f47eaac9bd4811f15
[whitespace fix for the cabal file
mikolaj.konarski@gmail.com**20110617180515
 Ignore-this: 5ad0262dc044ac4912aac4f9ea085aa
] 
hash: 0000000649-ad4945bedcbfa75e446a7770dc4b248990f513fddbce383c687abf3651bab59f
[add the spark trees to the cabal config
mikolaj.konarski@gmail.com**20110617201653
 Ignore-this: e591b4c69edac9983eafd4fdd6b3b64
] 
hash: 0000000199-428bbe89b924a28684039ed3e395827352b3b6f5e93c11930a9e99eedd83bb63
[add filtering out events urelated to spark trees
mikolaj.konarski@gmail.com**20110617214716
 Ignore-this: 5216df44f7516acd03c67fc7b3780d4a
] 
hash: 0000001222-b40687ce46b63d131862446d9f2a62d6838af544ab61e67472880ff4751d5341
[add the query to the spark tree, giving deltas of spark transtions
mikolaj.konarski@gmail.com**20110618092110
 Ignore-this: 1ec772da5d5600d35292b094ccd7c190
] 
hash: 0000005414-cd795d1675114490fa188d7512ef6f533eefe5fe92143b46f92e3dedf40f1d9d
[make available a few more basic spark tree operations
mikolaj.konarski@gmail.com**20110618101909
 Ignore-this: fa57254c55dd2bcabbe24523649d9bf8
] 
hash: 0000000592-136476340c88d177b875ad876118e4a14e088948286f67b91c4930b8779c2214
[plug spark trees in; stop at rendering
mikolaj.konarski@gmail.com**20110618102016
 Ignore-this: 8b6d0b2fa05fff83fee5289fd64204bc
] 
hash: 0000002047-1980ba5a66ea846fa63473fc85e4af3a390a21f9917dd9393e708979c50bd786
[refactor and generalize SparkCounters operations
mikolaj.konarski@gmail.com**20110620105202
 Ignore-this: 447419d0a52c898a64ffd3ecda3f4200
] 
hash: 0000003431-7dd48234d68eed8a54170283b8dee8a4c2a7fef2e63ae67322b3360d911b6e15
[more precisely approximate values for slices crossing borders of tree nodes
mikolaj.konarski@gmail.com**20110620105407
 Ignore-this: 27af79635be3377960ff3e06a89a5177
] 
hash: 0000000419-06b9dd69336347e4a5bf9a84a6bae2f9bf3f1e34568cc906b25bdfc37b82a5a3
[plug in SparkTrees for rendering, plenty decisions to make now
mikolaj.konarski@gmail.com**20110620105549
 Ignore-this: 3c378887f7eaa0bdebb3db16cd7b0b2
] 
hash: 0000002305-7be42bb89e14bd763d1a14654ff77c745a2c900ca92bfa2a173ef91a8c3f04ff
[refactor: move SparkCounters to a separate file
mikolaj.konarski@gmail.com**20110620112623
 Ignore-this: 1703690a3be1e363bfb1fd51d001136a
] 
hash: 0000007821-55aa2c00a4050b19deb04e64a1efad7d1135ce1672e6504c22d86724f95a815c
[refactor: reorder functions chronologically
mikolaj.konarski@gmail.com**20110620113236
 Ignore-this: 12bc0b12e6a94948a997650fc31546fa
] 
hash: 0000002104-b2cb451cfb4dd737518de50708dfaf89d8d069bdbdaa228944fa218ee84fd4ff
[move spark graphs out of trace graphs, into a separate block
mikolaj.konarski@gmail.com**20110621002223
 Ignore-this: 57fddfacd2c6e8da50f12306c8520f6
] 
hash: 0000004209-7210fb6880d9331328eaa2545a3c29c19e8959bbec4c29086d74fff22889c965
[add 3 stacked graphs of spark conversion; TODO: fill
mikolaj.konarski@gmail.com**20110621113354
 Ignore-this: e90945fa72b5bf1ba177cd8e7a170231
] 
hash: 0000002475-583d9e4d589e548d919b5f7704d5fa880fad9ece2e0cc5a8b9af9751fc3ac618
[add spark creation graph, separately
mikolaj.konarski@gmail.com**20110621122528
 Ignore-this: ed8c760d236e1dea301a712170c561d3
] 
hash: 0000004798-96765fb922bb80b1d3fd67621c47db2efc911e98d06f0752120ecfea9ac91124
[add filling area under graphs with solid colours; TODO: clean zoom
mikolaj.konarski@gmail.com**20110621154630
 Ignore-this: 3b33e2b9816b232bda9a445f2a192a87
] 
hash: 0000003413-222aef5ab0e942bcc287f7c2a2d742dea4c011091460b2f07c4a8bf9fe52c822
[fix zoom and arithmetics
mikolaj.konarski@gmail.com**20110621164821
 Ignore-this: 91ffa532828afd4eb72fd82f4878eb3e
] 
hash: 0000001309-e3d17114ac9c7420fcb45768e165a39d85e95eb4851af4b8a9541a45c2bd950d
[add drawing of a black line, 1 pixel above the outline of spark areas
mikolaj.konarski@gmail.com**20110624112412
 Ignore-this: 77e37fdc0f472b744d2f6b78b8275269
] 
hash: 0000003667-ed5fb93183fa011bc52549ab07a774811800bb5fcc0899051148b4b74cb0b2f0
[make spark_per_pixel, etc., local to the graph stack, not global
mikolaj.konarski@gmail.com**20110624115826
 Ignore-this: 62c325fd381098d820a2237bc9cc6758
] 
hash: 0000003586-59a742004f0ac00d1ec826c918cc90439442081486797e2c1bc9ea8548037e1c
[get rid of the hack compensating for line width difference
mikolaj.konarski@gmail.com**20110624120531
 Ignore-this: 32c561624ddfec9154bb1e5b65e199f5
 Apparently, lines look differently when they are drawn after filling a region
 than when they are drawn before. The fact that the line is being drawn
 1 pixel above the filled region does not change anything. Cairo must do
 some aggresive antialiasing or there is a bug with fill that causes it to
 overwrite pixels outside the desired area.
] 
hash: 0000001087-dba5baf4a7a0f9f8cf0d57e3010211d5a597138f90b9cde06c02dd03e33a3d9f
[calculate spark_per_pixel for each HEC and graph stack separately
mikolaj.konarski@gmail.com**20110624122933
 Ignore-this: 43c5cffc403be63c7a759d64415e7953
] 
hash: 0000000711-5f5a06af374ad209a231ec47843cbc3e4fbbf8ac35b8a299a99fe29ed1b71fb9
[fix (one-liner) to the wrong, high plateaus when GC is rare
mikolaj.konarski@gmail.com**20110625001432
 Ignore-this: 10c4f2377eb13806baa595b377ac0918
] 
hash: 0000001186-11b284cfcabc3adbb9d8ca5eaa232ca2260ad79e7afacadadf0c3cfb759b8afd
[calculate spark graph scale globally for all graphs and HECs
mikolaj.konarski@gmail.com**20110625004042
 Ignore-this: 9bbd064dbfa3a1529c83570c395c804e
] 
hash: 0000008145-0c6378c8aa348f6a059ef742a455cd6982d80f1eb99ca0791a19de83bbbe847b
[remove a few parameters that I don't use for a long time now
mikolaj.konarski@gmail.com**20110625004853
 Ignore-this: a3eeec8742f0e56d5d5b527ebca74b9b
] 
hash: 0000002897-70b30d511a4dcc7302f8969d8de093eb3d06fa513072fac9cc9f41315cd6c580
[draw the outline exactly line Activity graph draws it (not 1 pixel above)
mikolaj.konarski@gmail.com**20110625012425
 Ignore-this: b1e01de5b7df40fd47647ebd004eab4f
] 
hash: 0000000814-4b00356c772439101acec8f9d796670fc99c84765a6c33c375243d9ea9388332
[refactor spark graphs now that they all have the same scale
mikolaj.konarski@gmail.com**20110625092408
 Ignore-this: 8f022594997edff32961e7c377867cd6
] 
hash: 0000004166-b83d153c31855f235f6dd5828e2d60b410b2e282248d3c5e0924f7e4186e9f42
[refactor spark graph scaling to use spark per slice instead of per pixel
mikolaj.konarski@gmail.com**20110625092721
 Ignore-this: a43c9f0b44e27fd1c372656fb9249b71
] 
hash: 0000002092-7c0e9a426c66d9c75303187328a52e46d9cd781fad95f3b5596d771deb4df113
[switch SparkCounters from Word64 to Double to fix broken zoom in
mikolaj.konarski@gmail.com**20110625104412
 Ignore-this: c457ed6f8780302e194b9f0da4297203
] 
hash: 0000002237-e2b65fa2f923fed097f1f37819060d483819408dbcf3ce3ca84053eed7d24452
[add a mock-up of the pool size graph
mikolaj.konarski@gmail.com**20110625212013
 Ignore-this: 799a127e38e6fb33284507f04a3bdeb
] 
hash: 0000003787-466bd7a5415d6ac8a3d953393e6342a767bbaac3c9e3f0e946d9955a84de0154
[visualiza rate of spark pool size change, for testing
mikolaj.konarski@gmail.com**20110625220117
 Ignore-this: 92195ff37c3e88ae0f50cc87beda271
] 
hash: 0000000946-a7eaea045175f2d5c6eb3917234fae9d4d1712f9be842617779d91d04b19c026
[remove the absolute values from spark tree leaves; unneeded for pool size
mikolaj.konarski@gmail.com**20110625222244
 Ignore-this: 890d1a163b0b430b89b09548a2a53e91
] 
hash: 0000002280-7381c8ab35ce1c1478fc1b9f06d4bccec62aee9457147b4982f7fb625906d907
[remove the endT field of spark counter durations (YAGNI)
mikolaj.konarski@gmail.com**20110625223321
 Ignore-this: 42445d5e50fa98aefe126bfed3803dd2
] 
hash: 0000000341-805c8a6ee3f0be546f4958ae75b6176c233249f81ad48cdce49052df85eec32d
[rename SparkCounters to SparkStats, for pool size
mikolaj.konarski@gmail.com**20110625232955
 Ignore-this: 224b1ea89a0d6ae93802bf4adb7f10af
] 
hash: 0000008315-ee3a93f705778a7a9b77af8bca9bfc8df42b21ca9eee9ead837a772d3816992c
[rename spark stats operations to reflect they are not raw log data
mikolaj.konarski@gmail.com**20110625233409
 Ignore-this: 7deb018c321c6129d32a5841d10f9e2e
] 
hash: 0000003392-d2c939df62b9a939388566d0821ed2cc43cf57c6d9d3ed923dfb0df311be088a
[complete demo-grade spark pool size rendering
mikolaj.konarski@gmail.com**20110627112839
 Ignore-this: 43bdb99f5709367c9db7012cbfd9e34d
] 
hash: 0000004473-77534c94c81ca6d6ad69b07333fcb3b596df36b647ba5427359a0a8222ebaa98
[change colours of spark pool size graph
mikolaj.konarski@gmail.com**20110627114937
 Ignore-this: 5258676e18c9b72507f936e77188f9d6
] 
hash: 0000001487-6c82c9dd9161a31b554e66998019af3d9d827c631a53305aab81366faad6b213
[clean up data representation: spark stats only for deltas
mikolaj.konarski@gmail.com**20110627140357
 Ignore-this: cc6fca4f5ca1ae504ed91a776b4ef3c7
 (previously spar stats (or spark counters) were also used for absolute
 values at point, in addition to deltas of the values over intervals
] 
hash: 0000003077-9377497d37d58a84ad9c2bd60ae0782bd515dc99599c1cf9f2edcf04b53a9713
[fix extrapolating pool size values after sample data ends
mikolaj.konarski@gmail.com**20110627153119
 Ignore-this: fa9b05bf7de8cde868cbe8d60bb4bea6
] 
hash: 0000001309-ac75eaca5d622e560b65be102badce4d5456ff39910de8c2784ed3821a94809f
[make spark pool mean more accurate (but not yet weighted nor resampled)
mikolaj.konarski@gmail.com**20110627193734
 Ignore-this: 6fc5f3f27d52716274eec0c1b6a90e28
] 
hash: 0000005703-f54167d27ae5a40db465eb2e0b1f9acc5c5ee08807bbe6f39facff4c5f1a8a99
[reorder spark conversion graphs
mikolaj.konarski@gmail.com**20110628135601
 Ignore-this: e415e0dc204690dd525b7527ea4e67dd
] 
hash: 0000000418-f98795642807b98e5366ef7ededd4b71d2a88ce87808755267015ca48fd8f834
[change colours of spark graph areas
mikolaj.konarski@gmail.com**20110628140548
 Ignore-this: e94720590b13803c15f6fbce46aa1ec9
] 
hash: 0000001641-7d778b0c51b0f47f374c2b19b0e3970d7d615baed27c090ea37314c8f9fb5a3a
[start implementing vertical scales for spark graphs
mikolaj.konarski@gmail.com**20110628225717
 Ignore-this: 42b867acaafbfca02ff5d427491c04c5
] 
hash: 0000001123-a681732c392e0781b13f0d98156018e2b6d96e02f5b65c4903579966b6020e1a
[add little ticks to spark graph scales
mikolaj.konarski@gmail.com**20110629011527
 Ignore-this: f4188174847e75ecf30e9541e7f8f7d5
] 
hash: 0000002548-c166e8932c12efeba480d8d1e8171dfeb1520c3c6d246db5b0e8ea580006f3f9
[add numbers to the ticks for the spark graph scales
mikolaj.konarski@gmail.com**20110629112231
 Ignore-this: 19f5f51aa546880115b1aef26ff083ec
] 
hash: 0000002929-c381873b61bbcf50866444703cc87f90ad691e8b2b87df0680a5fefd4ef61d0b
[change tick colour to blue, to be distinct from the graph outline colour
mikolaj.konarski@gmail.com**20110629113352
 Ignore-this: 8749a83f14eca0213c4b76c80868c5b
] 
hash: 0000000348-f5b72dfe26b756b9a8b6ddcb9d160b908269608aefcfe2f7d0540c8f2df2761e
[avoid printing the 0 tick value, since it often overwrites the graph
mikolaj.konarski@gmail.com**20110629113509
 Ignore-this: 927442f80685f743e6c4f28e00eb856d
] 
hash: 0000000358-08164b7e41517452867aee365402851946a3479f1d9e61678bc2f67b073e0bbd
[snap the graph height to the nearest even int, if big enough
mikolaj.konarski@gmail.com**20110629113603
 Ignore-this: c2e972338f8686a9763c8e804927ccfd
] 
hash: 0000001335-5350a07c3ee76c7b66ff8227d34b0fc9107b5f94a37257196c80359c4fe9952f
[tweak spark graph colours
mikolaj.konarski@gmail.com**20110629140714
 Ignore-this: 9522302faf95a803da3a2b55cc4d2949
] 
hash: 0000000695-6535820b7b60ead8bdb4b50dd1c7adc34a2e4bd2760c6f067558a82fe383bda7
[move spark graph colour definitions to ViewerColours.hs
mikolaj.konarski@gmail.com**20110629142349
 Ignore-this: 327915501244d2620c5e9a0db0472cfd
] 
hash: 0000002238-68cb2596d7cfb1f0aca99384caed19581feb02d6d8b53f24d42faa87f1153922
[fix spark transition rate units: now it's spark/ms
mikolaj.konarski@gmail.com**20110629145439
 Ignore-this: ca7f8d97a3e7e7b0f2cf1c02a4934ad6
] 
hash: 0000001710-792ae6ebad4bbeebf97df9268d1dab6f649c9ca783ebb4817fbc64ebeae0cd3f
[fix spurious blue lines by drawing vertical scales only at timeline start
mikolaj.konarski@gmail.com**20110629150901
 Ignore-this: 26fc8c51bd58dd978044c13006593a77
] 
hash: 0000000434-9c7a54e335382c29002527ce3cb5d281bffac92248988e4bdf1fdef84c755089
[Update to match latest ghc-events api version
Duncan Coutts <duncan@well-typed.com>**20110718151250
 Ignore-this: caafda64790f285448b7bf6148fc3db6
] 
hash: 0000000844-05c40ae8072fed560d81fe9afef2dd2263de741dfd48cd35a060ba6985e12005
[Sort out the metadata in the .cabal file
Duncan Coutts <duncan@well-typed.com>**20110718152247
 Ignore-this: aee195356d8d43aa37b13acdfa41505
] 
hash: 0000001627-3fe123309847e6ab10a54a5510cffb0202930df7678aa8c0d3fb8fc2d5ee08af
[Draw the new spark events as instant events in the HEC timelines
Duncan Coutts <duncan@well-typed.com>**20110718202650
 Ignore-this: ed994999bee45731d0c53ac432051c8c
] 
hash: 0000001051-f44a91683906b1bff192be6ee3e7bc1cac18fe95aaff129358f97b1f7069338f
[Add labels for the new spark graphs
Duncan Coutts <duncan@well-typed.com>**20110718202956
 Ignore-this: 5698609393a972cc24ae7948cf0bfcbe
] 
hash: 0000000565-d7ab84a84e7639dbae1fcf6338dad8b0732062be7cf371f8587d0bf111b3543c
[Move the spark rendering code into its own module
Duncan Coutts <duncan@well-typed.com>**20110718204940
 Ignore-this: eb8fa94b79998d24f62c3923f77ae54a
] 
hash: 0000019200-a6c06df355bbdffe2883a469c7577fd23bcc3c9a358db770d9febf2bccf0bccc
[make all the itroduced types private
mikolaj.konarski@gmail.com**20110701202545
 Ignore-this: 372b821591d4578b83058311064dad95
] 
hash: 0000001023-a139a220c6e2440c99dd15a695a7d739605f9d0d33db3cef0fc1ecad6b4d5dc2
[clarify the function of the zeroed spark stats
mikolaj.konarski@gmail.com**20110701214922
 Ignore-this: 71ceea2e0638f03fc76ec18ec9e50605
] 
hash: 0000001068-e5d25d3b92b422e073c769910341e60cd5bd64630422fbe738694e5da205dc7b
[explain the semantics of spark stat operations
mikolaj.konarski@gmail.com**20110701234239
 Ignore-this: 67bb45800faaa3312ca58b3cdb93f45a
] 
hash: 0000002885-b1bd6dade8e3f3895f937d9f78be79cc8d8b9375dc217d3bf9970c8e9028fe9e
[clarify "spark duration" and change semantics to match description
mikolaj.konarski@gmail.com**20110702114928
 Ignore-this: 120655f02d1df7c7d9082b6203d1c654
] 
hash: 0000002038-4c43b8a350d204dad72e0079d4081527e166133b0b96202d9b74cebda4b6f433
[improve documentation and layout of SparTree.hs
mikolaj.konarski@gmail.com**20110702142623
 Ignore-this: 25dbbcee5293f512d66ec5564a118bfb
] 
hash: 0000008721-ecbcf02dc87c04bf1215c9e9a345fb0bd039d4f4712fc4603d1f7f00421a5693
[improve documentation of spark rendering
mikolaj.konarski@gmail.com**20110702145256
 Ignore-this: c672077024b937517add136746352ed5
] 
hash: 0000068984-91ccd069f71ded64f244d772431760e1e19f05937898295a8cef4c6f1f94c600
[resolve the patch conflict from the refactoring and the in-code docs improvement
mikolaj.konarski@gmail.com**20110805073654
 Ignore-this: 684d3e1e897c212d64f93e4996bd1bb2
] 
hash: 0000010563-f49ae6f05ecff6abb945fa14c70b4dac3e7f441d5c29eed0ca0f125c75b07e57
[fix a crash when redrawing right ends of graphs
mikolaj.konarski@gmail.com**20110808080335
 Ignore-this: 2b91e3845610b3e61ee45c5c84be6e9b
] 
hash: 0000001156-95f6153cbf4e81282c4a5d703d01c6ed05d1a7100925fbae5226876a0e1fca62
[fix no redraw of horizontal dashed lines when zoomed in
mikolaj.konarski@gmail.com**20110808080445
 Ignore-this: b5ce410247c88b844346a9d00590f9b8
] 
hash: 0000001648-b6d2b7c7a1a228bec018fa591c61ddf12d0de5a78cef44afc44a45109e443269
[move back to using pool size durations centered around samples; add justification
mikolaj.konarski@gmail.com**20110808081401
 Ignore-this: 6c6d5cf84a888b4eb8a3d727a9b64880
] 
hash: 0000001178-ed9fe7cb989243f70a5fdbfc0c01744a928b3c52729a2dd9fe9d998bd951473d
[clean up the TODO file
mikolaj.konarski@gmail.com**20110808085258
 Ignore-this: 115b0b472a2d87a8303e7dbecdfe7868
] 
hash: 0000001423-6cb441c5343003efb89926e5729e7179ac968fe6a9d2ae033f892622d4755c62
[add some new bug reports to TODO
mikolaj.konarski@gmail.com**20110808085857
 Ignore-this: 2e4283193e11c7d09ac871052443d5ec
] 
hash: 0000001194-f010de7a534a011fd5f235bf2cd4c99adda7c6f6018cbb5675b5e52f6f428086
[a temporary fix for "Spark poo" in labels area with some fonts
Mikolaj Konarski <mikolaj@well-typed.com>**20110809080652
 Ignore-this: cf5df0ee098d0b0676614eeb01f0979
] 
hash: 0000000360-087070012b4f74b4eda112b3a4ac2679aa8e60b713ae8f47871a3ab8f317d43e
[merge threadscope-sparkgraph-demo TODO into ThreadScope TODO
Mikolaj Konarski <mikolaj@well-typed.com>**20110809083257
 Ignore-this: 9eed300d914ebab7f7a8c309e4b10610
] 
hash: 0000010312-569a075484bfc545e8bf1ac1f0a305b1396c14be9a193b008d64c6386ee1c567
